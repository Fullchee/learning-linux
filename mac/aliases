# -------------------- config --------------------
# use 'config' instead of 'git' to manage this git repo, lose all git auto-complete commands :(
alias config='/usr/bin/git --git-dir=$HOME/.cfg/ --work-tree=$HOME' $@
alias configpull='git stash && git pull && git stash pop'
alias sz="source ~/.zshrc"
alias aliases="subl ~/Documents/git_repo/new-installation-tips/mac/aliases"

# -------------------- Mac-only ------------------
alias chrome="open -a \"Google Chrome\""
alias cpcwd="pwd | tr -d '\n' | pbcopy"
alias subl="~/bin/subl"
alias pwords='open "~/Google Drive/What Kind of DB is this2.kdbx"'
alias o="open"
alias O="o"
alias o.="o ."

alias rmbreaks="sudo pkill shutdown"
alias psg="ps aux | grep"
alias pgrep="pgrep -f"

# ---------------- Cross Platform ---------------
# debug any node program
debugnode () {
    node --inspect-brk=9229 "$1" 28688 1
}

# open a vim program at the bottom
# easier than 1. opening, 2. pressing shift-g, 3. holding e and then pressing enter to make a new line
vimend () {
    vim '+normal Go' $1
}

function lazygit() {
	git add -u
	git commit -m $1
	git pull
	git push
}

alias globalnpm="npm list -g --depth=0"
alias diskusage="du -a * | sort -r -n"
alias vsc="code"

mkcd () {
  mkdir "$1"
  cd "$1"
}

alias rmmongodumps="mongo --quiet --eval 'db.getMongo().getDBNames().forEach(function(i){db.getSiblingDB(i).dropDatabase()})'"
alias rmdumps="rmmongodumps"

function youtubemp3() {
	youtube-dl --extract-audio --prefer-ffmpeg --audio-format mp3 -o "%(title)s.%(ext)s" "$1"
}

alias ipaddr="ifconfig | grep inet"

function backup() {
	git init;
	git add .;
	git commit -m "Initial commit";
}

function md2word() {
	if [ -z "$1" ] ; then
		echo 'Usage: md2word src dest' 
		return
	fi
	pandoc -o "$2" -f markdown -t docx "$1"
}

function xlsx2xml() {
	if [ -z "$1" ] ; then
		echo 'Usage: xlsx2xml src-xlsx dest-directory' 
		return
	fi
	unzip "$1" -d "$2"
}

function xml2xlsx() {
	if [ -z "$1" ] ; then
		echo 'Usage: xml2xlsx src-xml-folder dest-xslx' 
		return
	fi

	find "$1" -type f | xargs zip "$2"
}

# convert and compress the mov file from QuickTime Player's screen casting
function mov2mp4() {
	if [ -z "$1" ] ; then
		echo 'Usage: mov2mp4 <path to .mov file>' 
		return
	fi
	ffmpeg -i "$1" -acodec mp2 "$(basename "$1" .mov).mp4="
}

function replacestrindir() {
	if [ -z "$1" ] ; then
		echo 'Usage: replacestrindir <target str> <replacement str>' 
		return
	fi
	find . -name *.xml -exec sed -i '' 's/$1/$2/g' {} \;
}

alias v="vagrant"
alias d="docker"

function cdg() {
	TEMP_PWD=$(pwd)
	while ! [ -d .git ]; do
		cd ..
	done
	OLDPWD=$TEMP_PWD
}
